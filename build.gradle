buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.2.7.RELEASE"
    }
}

/*
http://www.slideshare.net/SpringCentral/cd-pipeline-gradlejenkins
 */

allprojects {
    repositories {
        jcenter()
    }
    apply plugin: 'java'
    apply plugin: 'spring-boot'
    apply plugin: 'findbugs'
}

/*
https://github.com/bintray/gradle-bintray-plugin

bintray {
    user = 'bintray_user'
    key = 'bintray_api_key'
    pkg {
        repo = 'generic'
        name = 'gradle-project'
        userOrg = 'bintray_user'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/bintray/gradle-bintray-plugin.git'

        version {
                name = '1.0-Final'
                desc = 'Gradle Bintray Plugin 1.0 final'
                released  = new Date()
                vcsTag = '1.3.0'
                attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
}
*/

jar {
    baseName = 'regelapplikation'
    version = '1.0.0-SNAPSHOT'
}


compileJava {
    options.encoding = 'utf-8'
    targetCompatibility = '1.8'
    sourceCompatibility = '1.8'
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-undertow'
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
    //compile 'org.springframework.boot:spring-boot-starter-security'

    compile 'net.sourceforge.nekohtml:nekohtml:1.9.21'

    compile 'org.webjars:bootswatch-spacelab:3.3.2'
    compile 'org.webjars:jquery:2.1.4'

    testCompile 'org.spockframework:spock-core:1.0-groovy-2.3'
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

findbugs {
    sourceSets = [sourceSets.main]
    ignoreFailures = true
    reportsDir = file("$project.buildDir/findbugsReports")
    effort = "max"
    reportLevel = "medium"
}


tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
